package dd;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JList;

public class lottery extends JFrame 
{
   private JPanel contentPane;
   private JList list;
   private JList list_1;
   public static void main(String[] args)
   {
      EventQueue.invokeLater(new Runnable() 
      {
         public void run() 
         {
            try 
            {
            	 lottery frame = new  lottery();
               frame.setVisible(true);
            } 
            catch (Exception e) 
            {
               e.printStackTrace();
            }
         }
      });
   }
   public  lottery()
   {
      DefaultListModel listModel = new DefaultListModel();
      DefaultListModel listModel_1 = new DefaultListModel();
      
      for(int i = 1; i <= 45; i++)
      {
         listModel.addElement(i);
      }
      
      setTitle("\uB85C\uB610 \uC22B\uC790 \uC0DD\uC131\uAE30");
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      setBounds(100, 100, 450, 300);
      contentPane = new JPanel();
      contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
      setContentPane(contentPane);
      contentPane.setLayout(null);
      
      JScrollPane scrollPane = new JScrollPane();
      scrollPane.setBounds(14, 12, 140, 229);
      contentPane.add(scrollPane);
   
      list = new JList(listModel);
      scrollPane.setViewportView(list);
      list.setLayoutOrientation(list.HORIZONTAL_WRAP);
      
      JButton btnRotate = new JButton("Rotate");
      btnRotate.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {   
            listModel.clear();
            
            boolean[] flags = new boolean[45];
            int temp;
            Random rnd = new Random();
            
            for(int i = 0; i < 45; i++)
            {
               flags[i] = false;
            }
            
            while(isFull(flags) == false)
            {
               temp = rnd.nextInt(45) + 1;
               
               if(flags[temp - 1] == false)
               {
                  listModel.addElement(temp);
                  flags[temp - 1] = true;
               }
            }
            list.setModel(listModel);
         }
      });
      btnRotate.setBounds(189, 58, 105, 27);
      contentPane.add(btnRotate);
      
      JButton btnCopy = new JButton("Copy");
      btnCopy.addActionListener(new ActionListener()
      {
         public void actionPerformed(ActionEvent e)
         {
            listModel_1.clear();
            
            int[] arr = list.getSelectedIndices();
            
            for(int i = 0; i < arr.length; i++)
            {
               listModel_1.addElement(listModel.getElementAt(arr[i]));
            }
            
            list_1.setModel(listModel_1);
         }
      });
      btnCopy.setBounds(189, 171, 105, 27);
      contentPane.add(btnCopy);
      
      JScrollPane scrollPane_1 = new JScrollPane();
      scrollPane_1.setBounds(340, 12, 78, 229);
      contentPane.add(scrollPane_1);
      
      list_1 = new JList();
      scrollPane_1.setViewportView(list_1);
   }
   public boolean isFull(boolean[] flag)
   {
      for(int i = 0; i < 45; i++)
      {
         if(flag[i] == false) 
         {
            return false;
         }
      }
      return true;
   }
}